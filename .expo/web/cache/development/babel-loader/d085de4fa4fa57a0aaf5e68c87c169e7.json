{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nexport function SettingsScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.sampleapis.com/wines/reds\"));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n\n  function handleSettingsPress() {\n    navigation.navigate(\"Home\");\n  }\n\n  return React.createElement(View, {\n    style: styles.screen\n  }, React.createElement(View, null, isLoading ? React.createElement(ActivityIndicator, null) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref2, index) {\n      var id = _ref2.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(View, {\n        style: styles.itemWrapper\n      }, React.createElement(View, {\n        style: styles.item\n      }, React.createElement(View, {\n        style: styles.image\n      }, React.createElement(Image, {\n        style: styles.tinyLogo,\n        source: {\n          uri: \"\" + item.image\n        }\n      })), React.createElement(View, {\n        style: styles.textContainer\n      }, React.createElement(Text, {\n        style: styles.text\n      }, \"WINERY:  \", item.winery), React.createElement(Text, {\n        style: styles.text\n      }, \"WINE: \", item.wine), React.createElement(Text, {\n        style: styles.text\n      }, item.rating.avarage), React.createElement(Text, {\n        style: styles.text\n      }, \"LOCATION: \", item.location))));\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: \"#DA7DA0\"\n  },\n  tinyLogo: {\n    width: 100,\n    height: 100,\n    resizeMode: \"contain\"\n  },\n  item: {\n    flexDirection: \"row\",\n    margin: 10\n  },\n  textContainer: {\n    padding: 25,\n    paddingRight: 150,\n    borderBottomColor: 'black',\n    borderBottomWidth: 3\n  },\n  text: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/sale1/Desktop/zamba/screens/SettingsScreen.js"],"names":["React","useEffect","useState","SettingsScreen","route","navigation","isLoading","setLoading","data","setData","getMovies","fetch","response","json","console","error","handleSettingsPress","navigate","styles","screen","index","id","item","itemWrapper","image","tinyLogo","uri","textContainer","text","winery","wine","rating","avarage","location","StyleSheet","create","flex","backgroundColor","width","height","resizeMode","flexDirection","margin","padding","paddingRight","borderBottomColor","borderBottomWidth","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  ActivityIndicator,\n  FlatList,\n  Image,\n} from \"react-native\";\n\nexport function SettingsScreen({ route, navigation }) {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  const getMovies = async () => {\n    try {\n      const response = await fetch(\n        \"https://api.sampleapis.com/wines/reds\"\n      );\n      const json = await response.json();\n      setData(json);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  function handleSettingsPress() {\n    navigation.navigate(\"Home\");\n  }\n\n  return (\n    <View style={styles.screen}>\n      {/* <Button title=\"Go to the Home screen!\" onPress={handleSettingsPress}  color=\"purple\" /> */}\n      <View>\n        {isLoading ? (\n          <ActivityIndicator />\n        ) : (\n          <FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <View style={styles.itemWrapper}>\n                <View style={styles.item}>\n                  <View style={styles.image}>\n                    <Image\n                      style={styles.tinyLogo}\n                      source={{\n                        uri: `${item.image}`,\n                      }}\n                    />\n                  </View>\n                  <View style={styles.textContainer}>\n                 <Text style={styles.text}>WINERY:  {item.winery}</Text>\n                    <Text style={styles.text}>WINE: {item.wine}</Text>\n                    <Text style={styles.text}>{item.rating.avarage}</Text>\n                    <Text style={styles.text}>LOCATION: {item.location}</Text>\n                  </View>\n                </View>\n              </View>\n            )}\n          />\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor:\"#DA7DA0\",\n\n    \n  },\n  tinyLogo: {\n    width: 100,\n    height: 100,\n    resizeMode: \"contain\",\n  },\n  item: {\n    flexDirection: \"row\",\n    margin: 10,\n  },\n  textContainer: {\n    padding: 25,\n    paddingRight:150,\n    borderBottomColor: 'black',\n    borderBottomWidth: 3,\n\n  },\n  text: {\n    color: \"white\",\n    \n\n  },\n});\n"]},"metadata":{},"sourceType":"module"}